#<PrevData>
print('********** Load and preview the dataset and datatypes')
##### define variables based on prompt
question='In 2014, was the prevalence of chronic kidney disease in Seattle higher or lower than in Boise?'
variable_text='the prevalence of chronic kidney disease'
time='2014'
city1='Seattle'
city2='Boise'

##### collect data from Data Commons for both cities
import requests
import json
cities = [city1, city2]
entity_data = {}
variable = None
for city in cities:
    query=variable_text+' in '+city
    url = f"https://datacommons.org/api/explore/detect?q={query}"
    headers = {
        "Content-Type": "application/json"
    }
    data = {
        "contextHistory": [],
        "dc": ""
    }
    response = requests.post(url, headers=headers, json=data)
    res_data = json.loads(response.text)
    entity = res_data['entities'][0]['dcid']
    if variable is None:
        variable = res_data['variables'][0]['dcid']
    url = "https://api.datacommons.org/v2/observation"
    params = {
    "key": API_KEY,
    "entity.dcids": entity, # e.g. "country/USA",
    "select": ["entity", "variable", "value", "date"],
    "variable.dcids": variable
    }
    response = requests.get(url, params=params)
    print('response.text')
    print(response.text)
    ##### save the data for each city
    entity_data[city] = json.loads(response.text)
#</PrevData>

#<PrepData>
print('********** Prepare the dataset for analysis and visualization')
##### extract the data from the response
city1_data = entity_data[city1]["byVariable"][variable]["byEntity"]
city2_data = entity_data[city2]["byVariable"][variable]["byEntity"]
city1_seq_data = city1_data[list(city1_data.keys())[0]]["orderedFacets"][0]['observations']
city2_seq_data = city2_data[list(city2_data.keys())[0]]["orderedFacets"][0]['observations']
print('city1_seq_data')
print(city1_seq_data)
print('city2_seq_data')
print(city2_seq_data)

#<Analysis>
print('********** Perform the analysis to answer the question in the prompt')
city1_val = [x for x in city1_seq_data if x['date'] == time][0]['value']
city2_val = [x for x in city2_seq_data if x['date'] == time][0]['value']
if city1_val > city2_val:
    natural_language_answer = f"The prevalence of chronic kidney disease in {city1} was higher than in {city2} in {time}."
else:
    natural_language_answer = f"The prevalence of chronic kidney disease in {city1} was lower than in {city2} in {time}."
print(natural_language_answer)
#</Analysis></PrepData>
