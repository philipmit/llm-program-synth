#<PrevData>
print('********** Load and preview the dataset and datatypes')
##### define variables based on prompt
question='In 2014, was the prevalence of chronic kidney disease in Seattle higher or lower than in Boise?'
variable_text='the prevalence of chronic kidney disease'
time='2014'
city1='Seattle'
city2='Boise'

##### collect data from Data Commons for city1
import requests
import json
query=variable_text+' in '+city1
url = f"https://datacommons.org/api/explore/detect?q={query}"
headers = {
    "Content-Type": "application/json"
}
data = {
    "contextHistory": [],
    "dc": ""
}
response = requests.post(url, headers=headers, json=data)
if response.text.strip():  
    res_data = json.loads(response.text)
    entity1 = res_data['entities'][0]
    variable = res_data['variables'][0]
    url = "https://api.datacommons.org/v2/observation"
    params = {
    "key": API_KEY,
    "entity.dcids": entity1, 
    "select": ["entity", "variable", "value", "date"],
    "variable.dcids": variable
    }
    response = requests.get(url, params=params)
    if response.text.strip():
        print('response.text for city1')
        print(response.text)
    else:
        print(f"No data found for {city1}")
seq_data1 = []
if response.text.strip():  
    obs_data = json.loads(response.text)
    entity_data1 = obs_data["byVariable"][variable]["byEntity"][entity1]
    seq_data1 = entity_data1["orderedFacets"][0]['observations']

##### collect data from Data Commons for city2
query=variable_text+' in '+city2
url = f"https://datacommons.org/api/explore/detect?q={query}"
response = requests.post(url, headers=headers, json=data)
if response.text.strip():  
    res_data = json.loads(response.text)
    entity2 = res_data['entities'][0]
    url = "https://api.datacommons.org/v2/observation"
    params = {
    "key": API_KEY,
    "entity.dcids": entity2, 
    "select": ["entity", "variable", "value", "date"],
    "variable.dcids": variable
    }    
    response = requests.get(url, params=params)
    if response.text.strip():
        print('response.text for city2')
        print(response.text)
    else:
        print(f"No data found for {city2}")
#</PrevData>

#<PrepData>
print('********** Prepare the dataset for analysis and visualization')
seq_data2 = []
if response.text.strip():  
    obs_data2 = json.loads(response.text)
    entity_data2 = obs_data2["byVariable"][variable]["byEntity"][entity2]
    seq_data2 = entity_data2["orderedFacets"][0]['observations']
#</PrepData>


#<Analysis>
print('********** Perform the analysis to answer the question in the prompt')
seq_data1_in_time=[x for x in seq_data1 if x['date'] == time]
seq_data2_in_time=[x for x in seq_data2 if x['date'] == time]

if len(seq_data1_in_time)>0 and len(seq_data2_in_time)>0:
    value1=seq_data1_in_time[0]['value']
    value2=seq_data2_in_time[0]['value']
    if value1>value2:
        natural_language_answer='higher'
    else:
        natural_language_answer='lower'
    print(f"The prevalence of chronic kidney disease in {city1} was {natural_language_answer} than in {city2} in 2014.")
else:
    print("Data for 2014 not found for one or both cities")
#</Analysis>
