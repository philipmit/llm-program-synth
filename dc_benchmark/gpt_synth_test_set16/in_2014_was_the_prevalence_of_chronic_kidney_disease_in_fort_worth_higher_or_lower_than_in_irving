#<PrevData>
print('********** Load and preview the dataset and datatypes')
##### collect data from Data Commons for city2
query=variable_text+' in '+city2
url = f"https://datacommons.org/api/explore/detect?q={query}"
headers = {
    "Content-Type": "application/json"
}
data = {
    "contextHistory": [],
    "dc": ""
}
response = requests.post(url, headers=headers, json=data)
res_data = json.loads(response.text)
entity2 = res_data['entities'][0]
variable = res_data['variables'][0]
url = "https://api.datacommons.org/v2/observation"
params = {
"key": API_KEY,
"entity.dcids": entity2, # e.g. "country/USA",
"select": ["entity", "variable", "value", "date"],
"variable.dcids": variable
}
response = requests.get(url, params=params)
print(response.text)
obs_data = json.loads(response.text)
entity_data2 = obs_data["byVariable"][variable]["byEntity"][entity2]
seq_data2 = entity_data2["orderedFacets"][0]['observations']
#</PrevData>

#<Analysis>
print('********** Perform the analysis to answer the question in the prompt')
##### extract data from the timeframe specified in the prompt
seq_data1_in_time=[x for x in seq_data1 if x['date'] == time]
seq_data2_in_time=[x for x in seq_data2 if x['date'] == time]
value1=seq_data1_in_time[0]['value']
value2=seq_data2_in_time[0]['value']
##### the answer options are 'higher' or 'lower'
if value1>value2:
    natural_language_answer='higher'
else:
    natural_language_answer='lower'
print(natural_language_answer)
#</Analysis>
#<Visualize>
import matplotlib.pyplot as plt
import numpy as np
print('********** Create visualization that demonstrates the answer to the question in the prompt')
plt.figure(figsize=(10, 6))
plt.bar(city1, value1, label=city1, color="navy")
plt.bar(city2, value2, label=city2, color="darkred")
plt.xlabel("City")
plt.ylabel(variable_text.capitalize())
plt.legend()
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()
#</Visualize>
