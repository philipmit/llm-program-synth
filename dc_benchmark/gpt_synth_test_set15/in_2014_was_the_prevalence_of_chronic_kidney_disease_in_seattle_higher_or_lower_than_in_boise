#<PrevData>
print('********** Load and preview the dataset and datatypes')
##### define variables based on prompt
question='In 2014, was the prevalence of chronic kidney disease in Seattle higher or lower than in Boise?'
variable_text='the prevalence of chronic kidney disease'
time='2014'
city1='Seattle'
city2='Boise'


##### collect data from Data Commons for city1
import requests
import json
query=variable_text+' in '+city1
url = f"https://datacommons.org/api/explore/detect?q={query}"
headers = {
    "Content-Type": "application/json"
}
data = {
    "contextHistory": [],
    "dc": ""
}
response = requests.post(url, headers=headers, json=data)
res_data = json.loads(response.text)
entity1 = res_data['entities'][0]
variable = res_data['variables'][0]
url = "https://api.datacommons.org/v2/observation"
params = {
"key": API_KEY,
"entity.dcids": entity1, # e.g. "country/USA",
"select": ["entity", "variable", "value", "date"],
"variable.dcids": variable
}
response = requests.get(url, params=params)
print('response.text for city1')
print(response.text)

##### collect data from Data Commons for city2
query=variable_text+' in '+city2
url = f"https://datacommons.org/api/explore/detect?q={query}"
response = requests.post(url, headers=headers, json=data)
res_data = json.loads(response.text)
entity2 = res_data['entities'][0]
params = {
"key": API_KEY,
"entity.dcids": entity2, # e.g. "country/USA",
"select": ["entity", "variable", "value", "date"],
"variable.dcids": variable
}
response = requests.get(url, params=params)
print('response.text for city2')
print(response.text)
#</PrevData>
#<PrepData>
print('********** Prepare the dataset for analysis and visualization')
##### extract the data from the response for city1
obs_data1 = json.loads(response.text)
print('obs_data1')
print(obs_data1)
entity_data1 = obs_data1["byVariable"][variable]["byEntity"][entity1]
print('entity_data1')
print(entity_data1)
print('type(entity_data1)')
print(type(entity_data1))
seq_data1 = entity_data1["orderedFacets"][0]['observations']
print('seq_data1')
print(seq_data1)
print('type(seq_data1)')
print(type(seq_data1))
print('len(seq_data1)')
print(len(seq_data1))

##### extract the data from the response for city2
# As the response for city2 is a 404 error, we can't extract data. We will handle this in the analysis section.
#</PrepData>
