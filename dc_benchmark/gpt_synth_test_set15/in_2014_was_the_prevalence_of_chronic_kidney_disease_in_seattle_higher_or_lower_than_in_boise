#<PrevData>
print('********** Load and preview the dataset and datatypes')
##### define variables based on prompt
question='In 2014, was the prevalence of chronic kidney disease in Seattle higher or lower than in Boise?'
variable_text='the prevalence of chronic kidney disease'
time='2014'
city1='Seattle'
city2='Boise'

##### collect data from Data Commons for city1
import requests
import json
query=variable_text+' in '+city1
url = f"https://datacommons.org/api/explore/detect?q={query}"
headers = {
    "Content-Type": "application/json"
}
data = {
    "contextHistory": [],
    "dc": ""
}
response = requests.post(url, headers=headers, json=data)
res_data = json.loads(response.text)
entity1 = res_data['entities'][0]
variable = res_data['variables'][0]
url = "https://api.datacommons.org/v2/observation"
params = {
"key": API_KEY,
"entity.dcids": entity1, # e.g. "country/USA",
"select": ["entity", "variable", "value", "date"],
"variable.dcids": variable
}
response = requests.get(url, params=params)
print('response.text for city1')
print(response.text)

##### collect data from Data Commons for city2
query=variable_text+' in '+city2
url = f"https://datacommons.org/api/explore/detect?q={query}"
response = requests.post(url, headers=headers, json=data)
res_data = json.loads(response.text)
entity2 = res_data['entities'][0]
url = "https://api.datacommons.org/v2/observation"
params = {
"key": API_KEY,
"entity.dcids": entity2, # e.g. "country/USA",
"select": ["entity", "variable", "value", "date"],
"variable.dcids": variable
}
response2 = requests.get(url, params=params)
print('response.text for city2')
print(response2.text)
#</PrevData>

#<PrepData>
print('********** Prepare the dataset for analysis')
##### extract the data from the response for city1
obs_data1 = json.loads(response.text)
print('obs_data1')
print(obs_data1)
if 'byVariable' in obs_data1:
    entity_data1 = obs_data1["byVariable"].get(variable, {}).get("byEntity", {}).get(entity1, {})
    print('entity_data1')
    print(entity_data1)
else:
    print('No data found for city1')

##### extract the data from the response for city2
obs_data2 = json.loads(response2.text)
print('obs_data2')
print(obs_data2)
if 'byVariable' in obs_data2:
    entity_data2 = obs_data2["byVariable"].get(variable, {}).get("byEntity", {}).get(entity2, {})
    print('entity_data2')
    print(entity_data2)
else:
    print('No data found for city2')
#</PrepData>
#<Analysis>
print('********** Perform the analysis to answer the question in the prompt')
##### extract data for the specified year for city1
value1 = None
if entity_data1:
    for facet in entity_data1["orderedFacets"]:
        for obs in facet["observations"]:
            if obs["date"] == time:
</Analysis>
