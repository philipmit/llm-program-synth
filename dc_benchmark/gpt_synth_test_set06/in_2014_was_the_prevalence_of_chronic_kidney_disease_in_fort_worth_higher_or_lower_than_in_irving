#<PrevData>
print('********** Load and preview the dataset and datatypes')
##### define variables based on prompt
question='In 2014, was the prevalence of chronic kidney disease in Fort Worth higher or lower than in Irving?'
variable_text='the prevalence of chronic kidney disease'
time='2014'
city1='Fort Worth'
city2='Irving'


##### collect data from Data Commons for city1
import requests
import json
query=variable_text+' in '+city1
url = f"https://datacommons.org/api/explore/detect?q={query}"
headers = {
    "Content-Type": "application/json"
}
data = {
    "contextHistory": [],
    "dc": ""
}
response = requests.post(url, headers=headers, json=data)
res_data = json.loads(response.text)
entity1 = res_data['entities'][0]
variable = res_data['variables'][0]
url = "https://api.datacommons.org/v2/observation"
params = {
"key": API_KEY,
"entity.dcids": entity1, 
"select": ["entity", "variable", "value", "date"],
"variable.dcids": variable
}
response = requests.get(url, params=params)
print('response.text for city1')
print(response.text)
obs_data_city1 = json.loads(response.text)


##### collect data from Data Commons for city2
query=variable_text+' in '+city2
url = f"https://datacommons.org/api/explore/detect?q={query}"
response = requests.post(url, headers=headers, json=data)
res_data = json.loads(response.text)
entity2 = res_data['entities'][0]
url = "https://api.datacommons.org/v2/observation"
params["entity.dcids"] = entity2
response = requests.get(url, params=params)
print('response.text for city2')
print(response.text)
obs_data_city2 = json.loads(response.text)
#</PrevData>
#<PrepData>
print('********** Prepare the dataset for analysis')
##### extract the data from the response for city1
obs_data_city1 = obs_data_city1["byVariable"][variable]["byEntity"][entity1]
print('obs_data_city1')
print(obs_data_city1)
entity_data_city1 = obs_data_city1["orderedFacets"][0]['observations']
print('entity_data_city1')
print(entity_data_city1)
print('type(entity_data_city1)')
print(type(entity_data_city1))
seq_data_city1 = [x for x in entity_data_city1 if x['date'] == time]
print('seq_data_city1')
print(seq_data_city1)
print('type(seq_data_city1)')
print(type(seq_data_city1))
print('len(seq_data_city1)')
print(len(seq_data_city1))

##### extract the data from the response for city2
obs_data_city2 = obs_data_city2["byVariable"][variable]["byEntity"][entity2]
print('obs_data_city2')
print(obs_data_city2)
entity_data_city2 = obs_data_city2["orderedFacets"][0]['observations']
print('entity_data_city2')
print(entity_data_city2)
print('type(entity_data_city2)')
print(type(entity_data_city2))
seq_data_city2 = [x for x in entity_data_city2 if x['date'] == time]
print('seq_data_city2')
print(seq_data_city2)
print('type(seq_data_city2)')
print(type(seq_data_city2))
print('len(seq_data_city2)')
print(len(seq_data_city2))
#</PrepData>
#<Analysis>
print('********** Perform the analysis to answer the question in the prompt')
##### the answer options are 'higher' or 'lower'
value_city1 = seq_data_city1[0]['value']
value_city2 = seq_data_city2[0]['value']
if value_city1 > value_city2:
    natural_language_answer='higher'
else:
    natural_language_answer='lower'
print('The prevalence of chronic kidney disease in '+city1+' was '+natural_language_answer+' than in '+city2+' in '+time+'.')
#</Analysis>
