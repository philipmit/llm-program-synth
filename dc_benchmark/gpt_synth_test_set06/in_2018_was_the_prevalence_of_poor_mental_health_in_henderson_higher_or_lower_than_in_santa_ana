#<PrevData>
print('********** Load and preview the dataset and datatypes')
##### define variables based on prompt
question='In 2018, was the prevalence of poor mental health in Henderson higher or lower than in Santa Ana?'
variable_text='the prevalence of poor mental health'
year='2018'
city1='Henderson'
city2='Santa Ana'


##### collect data from Data Commons
import requests
import json
query1=variable_text+' in '+city1
query2=variable_text+' in '+city2
url = f"https://datacommons.org/api/explore/detect?q={query1}"
headers = {
    "Content-Type": "application/json"
}
data = {
    "contextHistory": [],
    "dc": ""
}
response1 = requests.post(url, headers=headers, json=data)
response2 = requests.post(url.replace(query1, query2), headers=headers, json=data)
res_data1 = json.loads(response1.text)
res_data2 = json.loads(response2.text)
entity1 = res_data1['entities'][0]
entity2 = res_data2['entities'][0]
variable = res_data1['variables'][0]    # assuming same variable for both cities
url = "https://api.datacommons.org/v2/observation"
params1 = {
"key": API_KEY,
"entity.dcids": entity1,
"select": ["entity", "variable", "value", "date"],
"variable.dcids": variable
}
params2 = {
"key": API_KEY,
"entity.dcids": entity2,
"select": ["entity", "variable", "value", "date"],
"variable.dcids": variable
}
response1 = requests.get(url, params=params1)
response2 = requests.get(url, params=params2)
print(response1.text)
print(response2.text)
#</PrevData>
#<PrepData>
print('********** Prepare the dataset for analysis and visualization')
##### extract the data from the responses
obs_data1 = json.loads(response1.text)
obs_data2 = json.loads(response2.text)
entity_data1 = obs_data1["byVariable"][variable]["byEntity"][entity1]
entity_data2 = obs_data2["byVariable"][variable]["byEntity"][entity2]
seq_data1 = entity_data1["orderedFacets"][0]['observations']
seq_data2 = entity_data2["orderedFacets"][0]['observations']
#</PrepData>
#<Analysis>
print('********** Perform the analysis to answer the question in the prompt')
##### extract data from the year specified in the prompt
value1=[x['value'] for x in seq_data1 if x['date']==year][0]
value2=[x['value'] for x in seq_data2 if x['date']==year][0]
print('value1')
print(value1)
print('value2')
print(value2)
##### the answer options are 'higher' or 'lower'
if value1>value2:
    natural_language_answer='higher'
else:
    natural_language_answer='lower'
print(natural_language_answer)
#</Analysis>
#<Visualize>
print('********** Create visualization that demonstrates the answer to the question in the prompt')
import matplotlib.pyplot as plt
import numpy as np

##### extracting data for both cities for all years
X1=[int(x['date']) for x in seq_data1]
y1=[x['value'] for x in seq_data1]
X2=[int(x['date']) for x in seq_data2]
y2=[x['value'] for x in seq_data2]

plt.figure(figsize=(10, 6))
plt.plot(X1, y1, label=variable_text.capitalize()+' in '+city1, color="navy")
plt.plot(X2, y2, label=variable_text.capitalize()+' in '+city2, color="darkred")
plt.scatter(int(year), value1, color="navy")
plt.scatter(int(year), value2, color="darkred")
plt.title(question+'
Answer: '+city1+' was '+natural_language_answer)
plt.xlabel("Year")
plt.ylabel(variable_text.capitalize())
plt.legend()
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()
#</Visualize>
