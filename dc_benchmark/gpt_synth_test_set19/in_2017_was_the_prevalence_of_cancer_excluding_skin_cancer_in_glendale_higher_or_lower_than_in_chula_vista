#<PrevData>
print('********** Load and preview the dataset and datatypes')
##### define variables based on prompt
question='In 2017, was the prevalence of cancer, excluding skin cancer, in Glendale higher or lower than in Chula Vista?'
variable_text='the prevalence of cancer, excluding skin cancer'
time='2017'
city1='Glendale'
city2='Chula Vista'


##### collect data from Data Commons
import requests
import json
query1=variable_text+' in '+city1
query2=variable_text+' in '+city2
headers = {
    "Content-Type": "application/json"
}
data = {
    "contextHistory": [],
    "dc": ""
}
URL1_with_query1=URL1+query1
URL1_with_query2=URL1+query2
response1 = requests.post(URL1_with_query1, headers=headers, json=data)
response2 = requests.post(URL1_with_query2, headers=headers, json=data)
res_data1 = json.loads(response1.text)
res_data2 = json.loads(response2.text)
entity1 = res_data1['entities'][0]
entity2 = res_data2['entities'][0]
for variable_i in res_data1['variables']:
    if 'dc/' in variable_i:
        continue
    else:
        variable = variable_i
        break
params1 = {
"key": API_KEY,
"entity.dcids": entity1, 
"select": ["entity", "variable", "value", "date"],
"variable.dcids": variable
}
params2 = {
"key": API_KEY,
"entity.dcids": entity2, 
"select": ["entity", "variable", "value", "date"],
"variable.dcids": variable
}
response1 = requests.get(URL2, params=params1)
response2 = requests.get(URL2, params=params2)
print('response1.text')
print(response1.text)
print('response2.text')
print(response2.text)
#</PrevData>
#<PrepData>
print('********** Prepare the dataset for analysis and visualization')
##### extract the data from the response
obs_data1 = json.loads(response1.text)
obs_data2 = json.loads(response2.text)
print('obs_data1')
print(obs_data1)
print('obs_data2')
print(obs_data2)
entity_data1 = obs_data1["byVariable"][variable]["byEntity"][entity1]
entity_data2 = obs_data2["byVariable"][variable]["byEntity"][entity2]
print('entity_data1')
print(entity_data1)
print('entity_data2')
print(entity_data2)
print('type(entity_data1)')
print(type(entity_data1))
print('type(entity_data2)')
print(type(entity_data2))
seq_data1 = entity_data1["orderedFacets"][0]['observations']
seq_data2 = entity_data2["orderedFacets"][0]['observations']
print('seq_data1')
print(seq_data1)
print('seq_data2')
print(seq_data2)
print('type(seq_data1)')
print(type(seq_data1))
print('type(seq_data2)')
print(type(seq_data2))
print('len(seq_data1)')
print(len(seq_data1))
print('len(seq_data2)')
print(len(seq_data2))
#</PrepData>
#<Analysis>
print('********** Perform the analysis to answer the question in the prompt')
##### extract data from the timeframe specified in the prompt
seq_data1_in_time=[x for x in seq_data1 if x['date'] == time]
seq_data2_in_time=[x for x in seq_data2 if x['date'] == time]
print('seq_data1_in_time')
print(seq_data1_in_time)
print('seq_data2_in_time')
print(seq_data2_in_time)
value1=seq_data1_in_time[0]['value']
value2=seq_data2_in_time[0]['value']
print('value1')
print(value1)
print('value2')
print(value2)
##### the answer options are 'higher' or 'lower'
if value1>value2:
    natural_language_answer='higher'
else:
    natural_language_answer='lower'
print(natural_language_answer)
#</Analysis>
#<Visualize>
import matplotlib.pyplot as plt
import numpy as np
print('********** Create visualization that demonstrates the answer to the question in the prompt')
plt.figure(figsize=(10, 6))
X = np.array([1, 2])
y = np.array([value1, value2])
plt.bar(X, y, color=['blue', 'green'], width=0.2)
plt.xticks(X, [city1, city2])
plt.ylabel(variable_text.capitalize())
plt.title('Comparison of ' + variable_text + ' in ' + city1 + ' and ' + city2 + ' in ' + time)
plt.show()
#</Visualize>
