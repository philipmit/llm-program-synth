#<PrevData>
print('********** Load and preview the dataset and datatypes')
##### collect data from Data Commons for city2
query=variable_text+' in '+city2
URL1_with_query=URL1+query
response = requests.post(URL1_with_query, headers=headers, json=data)
res_data = json.loads(response.text)
entity2 = res_data['entities'][0]
params = {
"key": API_KEY,
"entity.dcids": entity2, 
"select": ["entity", "variable", "value", "date"],
"variable.dcids": variable
}
response = requests.get(URL2, params=params)
print('response.text')
print(response.text)
#</PrevData>

#<PrepData>
print('********** Prepare the dataset for analysis and visualization')
##### extract the data from the response
obs_data = json.loads(response.text)
print('obs_data')
print(obs_data)
entity_data2 = obs_data["byVariable"][variable]["byEntity"][entity2]
print('entity_data2')
print(entity_data2)
print('type(entity_data2)')
print(type(entity_data2))
seq_data2 = entity_data2["orderedFacets"][0]['observations']
print('seq_data2')
print(seq_data2)
print('type(seq_data2)')
print(type(seq_data2))
print('len(seq_data2)')
print(len(seq_data2))
#</PrepData>

#<Analysis>
print('********** Perform the analysis to answer the question in the prompt')
##### extract data from the timeframe specified in the prompt
seq_data1_in_time=[x for x in seq_data1 if x['date'] == time]
print('seq_data1_in_time')
print(seq_data1_in_time)
seq_data2_in_time=[x for x in seq_data2 if x['date'] == time]
print('seq_data2_in_time')
print(seq_data2_in_time)
value1=seq_data1_in_time[0]['value']
print('value1')
print(value1)
value2=seq_data2_in_time[0]['value']
print('value2')
print(value2)
##### the answer options are 'higher' or 'lower'
if value1>value2:
    natural_language_answer='higher'
else:
    natural_language_answer='lower'
print(natural_language_answer)
#</Analysis>
#<Visualize>
import matplotlib.pyplot as plt
import numpy as np
print('********** Create visualization that demonstrates the answer to the question in the prompt')
plt.figure(figsize=(10, 6))
X1=[int(x['date']) for x in seq_data1]
y1=[x['value'] for x in seq_data1]
X2=[int(x['date']) for x in seq_data2]
y2=[x['value'] for x in seq_data2]
plt.plot(X1, y1, label=city1, color="navy")
plt.plot(X2, y2, label=city2, color="darkred")
plt.scatter(int(time), value1, color="navy")
plt.scatter(int(time), value2, color="darkred")
plt.xlabel("Year")
plt.ylabel(variable_text.capitalize())
plt.legend()
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()
#</Visualize>
