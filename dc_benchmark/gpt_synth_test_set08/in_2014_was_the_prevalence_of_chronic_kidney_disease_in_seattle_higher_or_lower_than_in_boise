#<PrevData>
print('********** Load and preview the dataset and datatypes')
##### define variables based on prompt
question='In 2014, was the prevalence of chronic kidney disease in Seattle higher or lower than in Boise?'
variable_text='the prevalence of chronic kidney disease'
time='2014'
city1='Seattle'
city2='Boise'

##### collect data from Data Commons
import requests
import json

# data for city1
query1=variable_text+' in '+city1
url1 = f"https://datacommons.org/api/explore/detect?q={query1}"
headers = {
    "Content-Type": "application/json"
}
data = {
    "contextHistory": [],
    "dc": ""
}
response1 = requests.post(url1, headers=headers, json=data)
res_data1 = json.loads(response1.text)
entity1 = res_data1['entities'][0]
variable = res_data1['variables'][0]
url = "https://api.datacommons.org/v2/observation"
params1 = {
"key": API_KEY,
"entity.dcids": entity1,
"select": ["entity", "variable", "value", "date"],
"variable.dcids": variable
}
response1 = requests.get(url, params=params1)

# data for city2
query2=variable_text+' in '+city2
url2 = f"https://datacommons.org/api/explore/detect?q={query2}"
response2 = requests.post(url2, headers=headers, json=data)
res_data2 = json.loads(response2.text)
entity2 = res_data2['entities'][0]
params2 = {
"key": API_KEY,
"entity.dcids": entity2, 
"select": ["entity", "variable", "value", "date"],
"variable.dcids": variable
}
response2 = requests.get(url, params=params2)
#</PrevData>

#<PrepData>
print('********** Prepare the dataset for analysis and visualization')
##### extract the data from the response
obs_data1 = json.loads(response1.text)
obs_data2 = json.loads(response2.text)

entity_data1 = obs_data1["byVariable"][variable]["byEntity"][entity1]
entity_data2 = obs_data2["byVariable"][variable]["byEntity"][entity2]

seq_data1 = entity_data1["orderedFacets"][0]['observations']
seq_data2 = entity_data2["orderedFacets"][0]['observations']

# Get the data for 2014
seq_data1_2014 = [x for x in seq_data1 if x['date'] == time]
seq_data2_2014 = [x for x in seq_data2 if x['date'] == time]
#</PrepData>
#<Analysis>
print('********** Perform the analysis to answer the question in the prompt')
##### extract data from the timeframe specified in the prompt
value1 = seq_data1_2014[0]['value'] if len(seq_data1_2014) > 0 else None
value2 = seq_data2_2014[0]['value'] if len(seq_data2_2014) > 0 else None

##### the answer options are 'higher' or 'lower'
if value1 and value2:
    if value1 > value2:
        natural_language_answer = 'higher'
    elif value1 < value2:
        natural_language_answer = 'lower'
    else:
        natural_language_answer = 'equal'
else:
    natural_language_answer = "Data not available"

print(f"In 2014, the prevalence of chronic kidney disease in {city1} was {natural_language_answer} than in {city2}.")
#</Analysis>
