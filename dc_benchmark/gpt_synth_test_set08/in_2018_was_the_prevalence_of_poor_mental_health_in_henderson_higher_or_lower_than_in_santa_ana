#<PrevData>
print('********** Load and preview the dataset and datatypes')
##### define variables based on prompt
question='In 2018, was the prevalence of poor mental health in Henderson higher or lower than in Santa Ana?'
variable_text='the prevalence of poor mental health'
year='2018'
city1='Henderson'
city2='Santa Ana'


##### collect data from Data Commons for each city
import requests
import json
query1=variable_text+' in '+city1
query2=variable_text+' in '+city2
url = f"https://datacommons.org/api/explore/detect?q={query2}" # use the correct query variable for city2
headers = {
    "Content-Type": "application/json"
}
data = {
    "contextHistory": [],
    "dc": ""
}
response2 = requests.post(url, headers=headers, json=data) # correct the response variable for city2
res_data2 = json.loads(response2.text) # correct the response variable for city2
entity2 = res_data2['entities'][0] # correct the entity variable for city2
params2 = {
"key": API_KEY,
"entity.dcids": entity2, # correct the entity variable for city2
"select": ["entity", "variable", "value", "date"],
"variable.dcids": variable
}
response2 = requests.get(url, params=params2) # correct the response variable for city2
print('response2.text')
print(response2.text)
#</PrevData>

#<PrepData>
print('********** Prepare the dataset for analysis')
##### extract the data from the response
obs_data2 = json.loads(response2.text) # correct the response variable for city2
print('obs_data2') # correct the obs_data variable for city2
print(obs_data2) # correct the obs_data variable for city2
entity_data2 = obs_data2["byVariable"][variable]["byEntity"][entity2] # correct the entity and obs_data variables for city2
print('entity_data2') # correct the entity_data variable for city2
print(entity_data2) # correct the entity_data variable for city2
print('type(entity_data2)') # correct the entity_data variable for city2
print(type(entity_data2)) # correct the entity_data variable for city2
seq_data2 = entity_data2["orderedFacets"][0]['observations'] # correct the entity_data and seq_data variables for city2
print('seq_data2') # correct the seq_data variable for city2
print(seq_data2) # correct the seq_data variable for city2
print('type(seq_data2)') # correct the seq_data variable for city2
print(type(seq_data2)) # correct the seq_data variable for city2
print('len(seq_data2)') # correct the seq_data variable for city2
print(len(seq_data2)) # correct the seq_data variable for city2
#</PrepData>


#<Analysis>
print('********** Perform the analysis to answer the question in the prompt')
##### extract data from the specified year
seq_data_in_year2=[x for x in seq_data2 if x['date'] == year] # correct the seq_data variable for city2
print('seq_data_in_year2') # correct the seq_data variable for city2
print(seq_data_in_year2) # correct the seq_data variable for city2
print('len(seq_data_in_year2)') # correct the seq_data variable for city2
print(len(seq_data_in_year2)) # correct the seq_data variable for city2
if len(seq_data_in_year2)>0: # correct the seq_data variable for city2
    value2=seq_data_in_year2[0]['value'] # correct the seq_data variable for city2
    print('value2') # correct the value variable for city2
    print(value2) # correct the value variable for city2
else:
    print('No data for '+city2+' in '+year) # correct the city variable for city2

# Compare the values for city1 and city2
if value1 > value2:
    natural_language_answer=city1+' had a higher '+variable_text+' than '+city2+' in '+year
elif value1 < value2:
    natural_language_answer=city1+' had a lower '+variable_text+' than '+city2+' in '+year
else:
    natural_language_answer=city1+' and '+city2+' had the same '+variable_text+' in '+year
print(natural_language_answer)
#</Analysis></Visualize>
