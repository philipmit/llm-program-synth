#<PrevData>
print('********** Load and preview the dataset and datatypes')
##### define variables based on prompt
question='In 2014, was the prevalence of chronic kidney disease in Seattle higher or lower than in Boise?'
variable_text='the prevalence of chronic kidney disease'
year='2014'
city1='Seattle'
city2='Boise'


##### collect data from Data Commons
import requests
import json
query1=variable_text+' in '+city1
query2=variable_text+' in '+city2
url = f"https://datacommons.org/api/explore/detect?q={query1}"
headers = {
    "Content-Type": "application/json"
}
data = {
    "contextHistory": [],
    "dc": ""
}
response1 = requests.post(url, headers=headers, json=data)
res_data1 = json.loads(response1.text)
entity1 = res_data1['entities'][0]
variable = res_data1['variables'][0]

url = f"https://datacommons.org/api/explore/detect?q={query2}"
response2 = requests.post(url, headers=headers, json=data)
res_data2 = json.loads(response2.text)
entity2 = res_data2['entities'][0]

url = "https://api.datacommons.org/v2/observation"
params1 = {
"key": API_KEY,
"entity.dcids": entity1, 
"select": ["entity", "variable", "value", "date"],
"variable.dcids": variable
}
params2 = {
"key": API_KEY,
"entity.dcids": entity2, 
"select": ["entity", "variable", "value", "date"],
"variable.dcids": variable
}
response1 = requests.get(url, params=params1)
response2 = requests.get(url, params=params2)
print('response1.text')
print(response1.text)
print('response2.text')
print(response2.text)
#</PrevData>
#<PrepData>
print('********** Prepare the dataset for analysis and visualization')
##### extract the data from the response
obs_data1 = json.loads(response1.text)
obs_data2 = json.loads(response2.text)
entity_data1 = obs_data1["byVariable"][variable]["byEntity"][entity1]
entity_data2 = obs_data2["byVariable"][variable]["byEntity"][entity2]
seq_data1 = entity_data1["orderedFacets"][0]['observations']
seq_data2 = entity_data2["orderedFacets"][0]['observations']

# extract the data for the specific year in the prompt
value1 = [x['value'] for x in seq_data1 if x['date'] == year][0]
value2 = [x['value'] for x in seq_data2 if x['date'] == year][0]
print('value1')
print(value1)
print('value2')
print(value2)
#</PrepData>
#<Analysis>
print('********** Perform the analysis to answer the question in the prompt')
##### compare the values
if value1>value2:
    natural_language_answer=city1+' had higher '+variable_text+' than '+city2+' in '+year+'.'
elif value1<value2:
    natural_language_answer=city1+' had lower '+variable_text+' than '+city2+' in '+year+'.'
else:
    natural_language_answer=city1+' and '+city2+' had same '+variable_text+' in '+year+'.'
print(natural_language_answer)
#</Analysis>
#<Visualize>
print('********** Create visualization that demonstrates the answer to the question in the prompt')
import matplotlib.pyplot as plt
import numpy as np

# data to plot
n_groups = 1
values_city1 = (value1,)
values_city2 = (value2,)

# create plot
fig, ax = plt.subplots()
index = np.arange(n_groups)
bar_width = 0.35
opacity = 0.8

rects1 = plt.bar(index, values_city1, bar_width,
alpha=opacity,
color='b',
label=city1)

rects2 = plt.bar(index + bar_width, values_city2, bar_width,
alpha=opacity,
color='g',
label=city2)

plt.xlabel('City')
plt.ylabel('Values')
plt.title('Comparison of '+variable_text+' in '+year)
plt.xticks(index + bar_width, (''))
plt.legend()

plt.tight_layout()
plt.show()
#</Visualize>
