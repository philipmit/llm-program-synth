#<PrevData>
print('********** Load and preview the dataset and datatypes for both cities over time')
##### collect data from Data Commons for both cities and all available years
values_city_year = {}
for city in cities:
    year_val = {}
    query = variable_text+' in '+city
    url = f"https://datacommons.org/api/explore/detect?q={query}"
    headers = {
        "Content-Type": "application/json"
    }
    data = {
        "contextHistory": [],
        "dc": ""
    }
    response = requests.post(url, headers=headers, json=data)
    res_data = json.loads(response.text)
    entity = res_data['entities'][0]
    variable = res_data['variables'][0]
    url = "https://api.datacommons.org/v2/observation"
    params = {
        "key": API_KEY,
        "entity.dcids": entity,
        "select": ["entity", "variable", "value", "date"],
        "variable.dcids": variable
    }
    response = requests.get(url, params=params)
    print('response.text')
    print(response.text)
    obs_data = json.loads(response.text)
    entity_data = obs_data["byVariable"][variable]["byEntity"][entity]
    seq_data = entity_data["orderedFacets"][0]['observations']
    for element in seq_data:
        year = element['date']
        value = element['value']
        year_val[year] = value
    values_city_year[city] = year_val
print('values_city_year')
print(values_city_year)
#</PrevData>

# <Visualize>
print('********** Create visualization that shows the trend over time for both cities')
for city, year_data in values_city_year.items():
    year = list(year_data.keys())
    values = list(year_data.values())
    plt.plot(year, values, label=city)

plt.title(variable_text.capitalize() + ' over time')
plt.legend()
plt.xlabel('Years')
plt.xticks(rotation=45)
plt.ylabel(variable_text.capitalize())
plt.show()
# </Visualize>
```
This additional step will provide a line chart comparing the trend of the prevalence of chronic kidney disease in both cities over the years.</Analysis>
